name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: push

jobs:

  build_wheels:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
        with:
          # This allows the setuptools_scm library to discover the tag version from git
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: macOS - Prepare MacPorts - Prefer Xcode 11.5
        if: ${{ runner.os == 'macOS' }}
        run: |
          xcode-select -p
          xcodebuild -version
          sudo xcode-select -s /Applications/Xcode_11.5.app/Contents/Developer
          xcodebuild -version

      - name: macOS - Cache OpenCV dependencies for macOS
        id: caching
        if: ${{ runner.os == 'macOS' }}
        uses: actions/cache@v2
        with:
          path: |
            /opt/opencv
          # The key based on the file hash of the build script
          # i.e. changing OPENCV_VERSION within the script will invalidate the cache
          key: ${{ runner.os }}-build-opencv-${{ hashFiles('scripts/_install_opencv_*_on_macos.sh') }}

      - name: macOS - Install MacPorts
        if: ${{ runner.os == 'macOS' }}
        uses: WildbookOrg/wbia-pypkg-build/actions/macports@v1.0.0

      - name: Build wheel
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: wildme/manylinux:opencv-3.4.11
          CIBW_SKIP: cp27-* pp27-* pp36-* *-win32 *-win_amd64 *-manylinux_i686 *-manylinux_aarch64 *-manylinux_ppc64le *-manylinux_s390x
          CIBW_BEFORE_BUILD_LINUX: bash scripts/ci_prepare_centos_for_build.sh
          CIBW_BEFORE_BUILD_MACOS: bash scripts/ci_prepare_macos_for_build.sh
          CIBW_TEST_COMMAND: python -c "import vtool; from vtool.__main__ import main; main()"
        run: |
          python -m pip install cibuildwheel==1.4.2
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: |
          pip install scikit-build
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
          # To test: repository_url: https://test.pypi.org/legacy/
